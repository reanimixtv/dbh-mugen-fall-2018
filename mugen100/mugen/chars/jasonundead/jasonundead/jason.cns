; Constants and state file.
; There are comments scattered through this file, so you may like to
; take a look if would like to learn more about the cns.

[Data]
life = 2000			;Amount of life to start with
power = 3000		;Amount of maximum power
attack = 140		;attack power (more is stronger)
defence = 110		;defensive power (more is stronger)
fall.defence_up = 50	;Percentage to increase defense everytime player is knocked down
liedown.time = 15;60		;Time which player lies down for, before getting up
airjuggle = 15		;Number of points for juggling
sparkno = 2			;Default hit spark number for HitDefs
guard.sparkno = 40	;Default guard spark number
KO.echo = 1			;1 to enable echo on KO
volume = 100			;Volume offset (negative for softer)
IntPersistIndex = 60	;Variables with this index and above will not have their values
FloatPersistIndex = 40  ;reset to 0 between rounds or matches. There are 60 int variables,
  				;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
  				;If omitted, then it defaults to 60 and 40 for integer and float
  				;variables repectively, meaning that none are persistent, i.e. all
  				;are reset. If you want your variables to persist between matches,
  				;you need to override state 5900 from common1.cns.


[Size]
xscale = 0.5			;Horizontal scaling factor.
yscale = 0.5			;Vertical scaling factor.
ground.back = 15		;Player width (back, ground)
ground.front = 16		;Player width (front, ground)
air.back = 12		;Player width (back, air)
air.front = 12		;Player width (front, air)
height = 60			;Height of player (for opponent to jump over)
attack.dist = 160		;Default attack distance
proj.attack.dist = 90	;Default attack distance for projectiles
proj.doscale = 0		;Set to 1 to scale projectiles too   
head.pos = -5, -90	;Approximate position of head
mid.pos = -5, -60		;Approximate position of midsection
shadowoffset = 0		;Number of pixels to vertically offset the shadow
draw.offset = 0,0		;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 2.05;4;2.4		;Walk forward
walk.back = -1.95;-4;-2.2		;Walk backward
run.fwd  = 6;7.75;5.5, 0		;Run forward (x, y)
run.back = -6,-6;-4.5,-3.8	;Hop backward (x, y)
jump.neu = 0,-8.7		;Neutral jumping velocity (x, y)
jump.back = -4,0		;Jump back Speed (x, y)
jump.fwd = 4,-8		;Jump forward Speed (x, y)
runjump.back = -4,-8;Running jump speeds (opt)
runjump.fwd = 4,-8.1	;.
airjump.neu = 0,-8.1	;.
airjump.back = -2.55,-8	;Air jump speeds (opt)
airjump.fwd = 2.5,-8		;.

[Movement]
airjump.num = 1		;Number of air jumps allowed (opt)
airjump.height = 35	;Minimum distance from ground before you can air jump (opt)
yaccel = .44		;Vertical acceleration
stand.friction = .85	;Friction coefficient when standing
crouch.friction = .82	;Friction coefficient when crouching

;---------------------------------------------------------------------------
; Format:
; [Statedef STATENO]
; type = ?      S/C/A/L  stand/crouch/air/liedown
; movetype = ?  I/A/H    idle/attack/gethit
; physics = ?   S/C/A/N  stand/crouch/air/none
; juggle = ?             air juggle points move requires
;
; [State STATENO, ?]     ? - any number you choose
; type = ?
; ...

;------------------------------------------------------------------------
;Timber Area
;------------------------------------------------------------------------
[Quotes]
; Up to 100 victory quotes can be specified per language (victory0 - victory99)
victory1 = First Friday!

;---------------------------------------------------------------------------
; Format:
; [Statedef STATENO]
; type = ?      S/C/A/L  stand/crouch/air/liedown
; movetype = ?  I/A/H    idle/attack/gethit
; physics = ?   S/C/A/N  stand/crouch/air/none
; juggle = ?             air juggle points move requires
;
; [State STATENO, ?]     ? - any number you choose
; type = ?
; ...
;---------------------------------------------------------------------------
;Standing
[Statedef 1500]
type = S
ctrl = 0
anim = 505
velset = 0,0
physics = S
sprpriority = 3

[state 1500,1]
type = posset
trigger1 = 1
y = -5

[state 1500,2]
type = turn
trigger1 = facing != root, facing

[state 1500,3]
type = velset
trigger1 = 1
x = 0

[State 1500,5]
type = ChangeState
trigger1 = rootdist x = [101, 200]
value = 1501

[State 1500,6]
type = ChangeState
trigger1 = rootdist x = [-200, -101]
value = 1502

[State 1500,7]
type = ChangeState
trigger1 = rootdist x = [201, 4000]
value = 1503

[State 1500,8]
type = ChangeState
trigger1 = rootdist x = [-4000, -201]
value = 1504

;---------------------------------------------------------------------------
; Forward
[Statedef 1501]
type = S
ctrl = 0
anim = 525
velset = 3.5,0
physics = N
sprpriority = 3

[State 1501,1]
type = ChangeState
trigger1 = rootdist x = [-50, 50]
value = 1500

;---------------------------------------------------------------------------
;Backwards
[Statedef 1502]
type = S
ctrl = 0
anim = 525
velset = -3,0
physics = N
sprpriority = 3

[State 1502,1]
type = ChangeState
trigger1 = rootdist x = [-50, 50]
value = 1500
;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 180
velset = 0,0

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 190]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 190, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 190

[State 190, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 190, 4] ;Change to stand state
type = ChangeState
trigger1 = AnimTime = 0
value = 0

;---------------------------------------------------------------------------
; Super Jump, Start
[statedef 900]
type = S
physics = S
anim = 40
ctrl = 0

[State 900, superjump fwd]
type = varset
trigger1 = !time
trigger1 = command = "DUF"
fvar(19) = const(velocity.jump.fwd.x)*1.1

[State 900, superjump back]
type = varset
trigger1 = !time
trigger1 = command = "DUB"
fvar(19) = const(velocity.jump.fwd.x) * -1.1

[State 900, superjump up]
type = varset
trigger1 = !time
trigger1 = command = "DU"
fvar(19) = 0

[State 900, fx]
type = explod
trigger1 = animtime = 0
ownpal=1
anim = 900
postype = p1
pos = 0,-20
bindtime = 25
removetime = 25
sprpriority = 2

[state 900, end]
type = changestate
trigger1 = animtime = 0
trigger1 = fvar(19) > 0
value = 902

[state 900, end2]
type = changestate
trigger1 = animtime = 0
value = 901

;---------------------------------------------------------------------------
; Super Jump, Jumping Up/Back
[statedef 901]
type = A
physics = A
anim = 41
velset = fvar(19), const(velocity.jump.y)*1.5
ctrl = 1

[state 901, noturn]
type = assertspecial
trigger1 = 1
flag = noautoturn

;---------------------------------------------------------------------------
; Super Jump, Jumping Forward
[statedef 902]
type = A
physics = A
anim = 42
velset = fvar(19),const(velocity.jump.y)*1.5
ctrl = 1

[state 902, noturn]
type = assertspecial
trigger1 = 1
flag = noautoturn

;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 0

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Light Punch
; CNS difficulty: easy
[Statedef 200]
type    = S				;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A				;Move-type: A-attack, I-idle, H-gethit
physics = S				;Physics: S-stand, C-crouch, A-air
juggle  = 3				;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0			;Set velocity (x,y) (Def: no change)
ctrl = 0				;Set ctrl (Def: no change)
anim = 200				;Change animation (Def: no change)
poweradd = 5			;Power to add (Def: 0)
sprpriority = 2			;Set layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 27, 2			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 200, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Medium Punch
; CNS difficulty: easy
[Statedef 210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 25
ctrl = 0
velset = 0,0
anim = 210

[State 210, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 45, 2			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 210, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Strong Punch
; CNS difficulty: easy
[Statedef 220]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 50
ctrl = 0
velset = 0,0
anim = 220

[State 220, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 50, 5			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 5			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = 5, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -10,-4	;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
				;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air
fall=1

[State 220, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Light Kick
; CNS difficulty: easy
[Statedef 230]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 10
ctrl = 0
velset = 0,0
anim = 230

[State 230, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 25, 2			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -30, -10		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 230, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Medium Kick
; CNS difficulty: easy
[Statedef 240]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 30
ctrl = 0
velset = 0,0
anim = 240

[State 240, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 40,2			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -40	;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 240, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Strong Kick
; CNS difficulty: easy
[Statedef 250]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 51
ctrl = 0
velset = 0,0
anim = 250

[State 250, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 56,5			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -30, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 250, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Light Punch
; CNS difficulty: easy
; Description: Simple crouching attack. The HitDef's guardflag parameter
;     is set to "L", meaning that the move can only be guarded low
;     (crouching), and not by standing or jumping opponents.
;     Like for all light attacks, it's a good idea to keep the slidetime
;     and hittime parameters at a smaller number, so the opponent isn't
;     stunned for too long. For all crouching attacks you have to
;     remember to set the attr parameter to indicate that it is crouching
;     attack. In this case, "C, NA" stands for "crouching, normal attack".
;     The HitDef's priority is set at 3, instead of the default of 4,
;     so this attack has a lower priority than most others, meaning the
;     player will get hit instead of trading hits with the opponent if
;     their attack collision boxes (Clsn1) intersect each other's Clsn2
;     boxes at the same time.
;---------------------------------------------------------------------------
;Crouching light punch
;---------------------------------------------------------------------------
[Statedef 400]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 10
ctrl = 0
anim = 400
sprpriority = 2

[State 400, 2]
type = HitDef
trigger1 = Time = 0
attr = C, NA
damage    = 20,1
priority  = 3
animtype  = Light
hitflag = MAF
guardflag = L
pausetime = 10,11
sparkno = 0
sparkxy = -10,-42
hitsound   = 5,0
guardsound = 6,0
ground.type = Low
ground.slidetime = 4
ground.hittime  = 12
ground.velocity = -4
air.velocity = -1.5,-3

[State 400, 3]
type = CtrlSet
trigger1 = Time = 5
value = 1

[State 400, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11

;---------------------------------------------------------------------------
;Crouching medium punch
;---------------------------------------------------------------------------
[Statedef 410]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 10
ctrl = 0
anim = 410
sprpriority = 2

[State 410, 2]
type = HitDef
trigger1 = time =0
attr = C, NA
damage    = 30,2
animtype  = Medium
hitflag = MAF
guardflag = M
pausetime = 4,4
sparkno = 1
sparkxy = -10,-55
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 12
ground.hittime  = 15
ground.velocity = -4,-2
air.velocity = -3,-4

[State 410, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
;Crouching strong punch
;---------------------------------------------------------------------------
[Statedef 420]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 60
ctrl = 0
anim = 420
sprpriority = 2

[State 420, 1]
type = HitDef
trigger1 = time = 0
attr = S, NA
damage = 50,5
animtype = Hard
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 10, 5
sparkno = 0
sparkxy = -10, -76
hitsound = 5, 0
guardsound = 6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = 0,-12
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-12
air.hittime = 12

[State 420, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Light Kick
; CNS difficulty: easy
[Statedef 430]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 10
ctrl = 0
anim = 430

[State 430, 2]
type = HitDef
trigger1 = Time = 0
attr = C, NA
damage    = 25,1
priority  = 3
animtype  = Light
hitflag = MAF
guardflag = L
pausetime = 10,11
sparkno = 0
sparkxy = -10,-42
hitsound   = 5,0
guardsound = 6,0
ground.type = Low
ground.slidetime = 4
ground.hittime  = 12
ground.velocity = -4
air.velocity = -1.5,-3

[State 430, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Medium Kick
; CNS difficulty: easy
[Statedef 440]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 22
ctrl = 0
anim = 440

[State 440, 2]
type = HitDef
trigger1 = Time = 0
attr = C, NA
damage    = 35,2
priority  = 3
animtype  = Light
hitflag = MAF
guardflag = L
pausetime = 10,11
sparkno = 0
sparkxy = -10,-42
hitsound   = 5,0
guardsound = 6,0
ground.type = Low
ground.slidetime = 4
ground.hittime  = 12
ground.velocity = -4
air.velocity = -1.5,-3

[State 440, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouch Strong Kick
; CNS difficulty: easy
; Description: This move uses "Trip" for the "ground.type" parameter in
;     its HitDef. It's a special type that puts the opponent in a tripped
;     animation as he falls. Also, the hitflag parameter in the HitDef
;     is set to "MAFD". The "D" indicates that a downed opponent can be
;     hit by the attack.
[Statedef 450]
type    = C
movetype= A
physics = C
juggle  = 7
poweradd= 70
ctrl = 0
anim = 450

[State 450, 2]
type = HitDef
trigger1 = Time = 0
attr = C, NA
damage    = 50,5
priority  = 3
animtype  = Light
hitflag = MAF
guardflag = L
pausetime = 10,11
sparkno = 0
sparkxy = -10,-42
hitsound   = 5,0
guardsound = 6,0
ground.type = Low
ground.slidetime = 4
ground.hittime  = 12
ground.velocity = -4
air.velocity = -1.5,-3

[State 450, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Jump Light Punch
; CNS difficulty: easy
[Statedef 600]
type    = A
movetype= A
physics = A
juggle  = 2
poweradd= 11
ctrl = 0
anim = 600

[State 600, 1]
type = HitDef
trigger1 = Time = 0
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 25, 2			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 600, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Medium Punch
; CNS difficulty: easy
[Statedef 610]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 30
ctrl = 0
anim = 610

[State 610, 1]
type = HitDef
trigger1 = Time = 0
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 35, 2			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 610, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Strong Punch
; CNS difficulty: easy
[Statedef 620]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 50
ctrl = 0
anim = 620

[State 620, 1]
type = HitDef
trigger1 = Time = 0
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 63, 6			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 620, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Light Kick
; CNS difficulty: easy
[Statedef 630]
type    = A
movetype= A
physics = A
juggle  = 3
poweradd= 20
ctrl = 0
anim = 630

[State 630, 1]
type = HitDef
trigger1 = Time = 0
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 23, 2			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12

[State 630, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Medium Kick
; CNS difficulty: easy
[Statedef 640]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 50
ctrl = 0
anim = 640

[State 640, 1]
type = HitDef
trigger1 = Time = 0
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 35, 2			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12

[State 640, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Strong Kick
; CNS difficulty: easy
[Statedef 650]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 70
ctrl = 0
anim = 650

[State 650, 1]
type = HitDef
trigger1 = Time = 0
attr = A, NA			;Attribute: Standing, Normal Attack
damage = 60, 5			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -76		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12

[State 650, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1
;--------------------------------------------
; Shoot X
; CNS difficulty: easy
[Statedef 1210]
type = S
movetype = A
physics = S
juggle = 8
ctrl = 0
anim = 920

[State 1210, 1]
type = Projectile
trigger1 = AnimElem = 8
projanim = 925
projhitanim = 925
projhits = 5
offset = 110, -82
velocity = 25,0
attr = S, SP
damage = 12,4
getpower = 60
givepower = 40
guardflag = MA
pausetime = 0,12
;sparkno = 3
;sparkxy = 82,0
hitsound = 5,4
guardsound = 6,0
ground.type = High
ground.slidetime = 15
ground.hittime = 30
ground.velocity = -8
airguard.velocity = -3.5,-2.75
air.velocity = -2.5,-5.5
air.juggle = 3
air.fall = 1

[State 1210, 2]
type = ChangeState
trigger1= AnimTime = 0
value = 0
ctrl = 1
;-----------------------------------
;attacksuper
[StateDef 6300]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 6300
poweradd = 0
sprpriority = 2

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 1
trigger2 = animelem = 4
trigger3 = animelem = 7
trigger4 = animelem = 12
trigger5 = animelem = 15
trigger6 = animelem = 19
trigger7 = animelem = 22
trigger8 = animelem = 27
trigger9 = animelem = 32
trigger10 = animelem = 36
trigger11 = animelem = 41
trigger12 = animelem = 45
x = 3
y = 0
;ignorehitpause =
;persistent =

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 46
x = 0
y = 0
;ignorehitpause =
;persistent =


[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 4
trigger2 = animelem = 4
trigger3 = animelem = 7
trigger4 = animelem = 12
trigger5 = animelem = 15
trigger6 = animelem = 19
trigger7 = animelem = 22
trigger8 = animelem = 27
trigger9 = animelem = 32
trigger10 = animelem = 36
trigger11 = animelem = 41
value = S46,0
volume = 255
channel = -1
;lowpriority = -1
freqmul = 1.0
loop = 0
pan = 0
;abspan =
;ignorehitpause =
;persistent =

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 45
value = S44,0
volume = 0
channel = -1
;lowpriority = -1
freqmul = 1.3
loop = 0
pan = 0
;abspan =
;ignorehitpause =
;persistent =


[State 6300, 1]
type = HitDef
triggerall = p2bodydist X < 20
trigger1 = AnimElem = 2
attr = S, HA
damage = 30,6
animtype = light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 0
sparkxy = -10, -76
hitsound = s5, 0
guardsound = s6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -12
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
triggerall = p2bodydist X >=20
trigger1 = AnimElem = 2
attr = S, HA
damage = 20,6
animtype = light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 0
sparkxy = -10, -76
hitsound = s5, 0
guardsound = s6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 5
attr = S, HA
damage = 30,6
animtype = med
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 1
sparkxy = -10, -76
hitsound = s5, 1
guardsound = s6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 8
attr = S, HA
damage = 50,6
animtype = heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 2
sparkxy = -10, -76
hitsound = s5, 2
guardsound = s6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 13
attr = S, HA
damage = 50,6
animtype = heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 2
sparkxy = -10, -76
hitsound = s5, 2
guardsound = s6, 0
ground.type = low
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 16
attr = S, HA
damage = 50,6
animtype = heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 2
sparkxy = -10, -76
hitsound = s5, 2
guardsound = s6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 20
attr = S, HA
damage = 50,6
animtype = heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 1
sparkxy = -10, -76
hitsound = s5, 1
guardsound = s6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 23
attr = S, HA
damage = 50,6
animtype = heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 2
sparkxy = -10, -76
hitsound = s5, 2
guardsound = s6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 28
attr = S, HA
damage = 50,6
animtype = heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 2
sparkxy = -10, -56
hitsound = s5, 2
guardsound = s6, 0
ground.type = low
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 33
attr = S, HA
damage = 50,6
animtype = heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 2
sparkxy = -10, -76
hitsound = s5, 2
guardsound = s6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 37
attr = S, HA
damage = 50,6
animtype = heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 2
sparkxy = -10, -56
hitsound = s5, 2
guardsound = s6, 0
ground.type = low
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 6300, 1]
type = HitDef
trigger1 = AnimElem = 42
attr = S, HA
damage = 50,6
animtype = heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 5, 10
sparkno = 2
sparkxy = -10, -56
hitsound = s5, 2
guardsound = s6, 0
ground.type = low
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
getpower = 0

[State 800, 1]
type = HitDef
Trigger1 = animelem = 46
attr = S, HT
hitflag = M
guardflag = MAF
sparkxy = 0,-75
guardsparkno = s6,0
hitsound = s0,1
guardsound = s6,0
priority = 1, Miss
sparkno = -1
sprpriority = 1
p2facing = 1
p1stateno = 890
p2stateno = 900
fall = 1
getpower = 0

[State 0, AfterImage]
type = AfterImage
trigger1 = animelem = 1
time = 155
;length = 20
;palcolor = 256
;palinvertall = 0
;palbright = 30,30,30
;palcontrast = 120,120,220
;palpostbright = 0,0,0
paladd = 20,20,20
;palmul = .65,.65,.75
;timegap = 1
;framegap = 4
;trans = "add" ;"none","add1","sub"
ignorehitpause = 0
;persistent =

[State 0, SuperPause]
type = SuperPause
trigger1 = animelem = 1
time = 30
anim = 100
sound = s20,1
pos = 20,-70
move =
darken = 1
p2defmul = 0
poweradd = -1000
unhittable = 1
;endcmdbuftime = (winmugen only)
;pausebg =  (winmugen only)
;ignorehitpause =
;persistent =

[State 6300, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; Grab & Stab (attempt)
[Statedef 1100]
type    = S
movetype= A
physics = S
juggle  = 7
sprpriority = 2
velset = 0,0
anim = 1100
ctrl = 0

[State 1100, 1]
type = HitDef
trigger1 = AnimElem = 5
attr = S, NT
getpower = 45
givepower = 25
hitflag = M-
numhits = 0
p1facing = 1
p2facing = 1
priority = 4, Miss
sparkno = -1
sprpriority = 1
p1stateno = 1105
p2stateno = 1107
fall = 0
fall.damage = 0
fall.recover = 0


[State 1100, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;--------------------------------------------------
; Grab & Stab (success)
[Statedef 1105]
type    = S
movetype= A
physics = S
sprpriority = 3
anim = 1105

[State 1105, 0]
type = PlaySnd
trigger1 = AnimElem = 9
trigger2 = AnimElem = 13
trigger3 = AnimElem = 17
trigger4 = AnimElem = 21
trigger5 = AnimElem = 25
value = S20,1

[State 1105, 0]
type = PlaySnd
trigger1 = AnimElem = 1
value = S20,1

[State 1105, 1]
type = TargetBind
trigger1 = AnimElem = 1
;time = 115
pos = 57,0

[State 1105, 2]
type = TargetBind
trigger1 = AnimElem = 9
;time = 3
pos = 62,0

[State 1105, 3]
type = TargetBind
trigger1 = AnimElem = 14
;time = 3
pos = 63,0

[State 1105, 4]
type = TargetBind
;time = 3
trigger1 = AnimElem = 18
pos = 64,0

[State 1105, 5]
type = TargetBind
trigger1 = AnimElem = 22
;time = 3
pos = 65,0

[State 1105, 6]
type = TargetBind
trigger1 = AnimElem = 26
;time = 1
pos = 63,0

[State 1105, 7]
type = TargetBind
trigger1 = AnimElem = 27
;time = 3
pos = 58,0


[State 1105, snd]
type = PlaySnd
trigger1 = AnimElem = 24
value = S20,1
;volume = 40

;[State 1105, snd2]
;type = PlaySnd
;trigger1 = AnimElem = 11
;value = 5,8

[State 1105, damage]
type = TargetLifeAdd
trigger1 = AnimElem = 9
trigger2 = AnimElem = 13
trigger3 = AnimElem = 17
trigger4 = AnimElem = 21
trigger5 = AnimElem = 25
trigger6 = AnimElem = 26
value = -20

[State 1105, damage 2]
type = TargetLifeAdd
trigger1 = AnimElem = 27
value = -50

[State 1105, explod]
type = Explod
trigger1 = AnimElem = 9
trigger2 = AnimElem = 13
trigger3 = AnimElem = 17
trigger4 = AnimElem = 21
trigger5 = AnimElem = 25
trigger6 = AnimElem = 26
anim = 7002
pos = 5,-70
postype = P2
sprpriority = 2
ontop = 1
bindtime = 14
ownpal = 1

[State 1105, explod2]
type = Explod
trigger1 = AnimElem = 27
anim = 7003
pos = 5,-70
postype = P2
sprpriority = 2
ontop = 1
bindtime = 14
ownpal = 1


[State 1105, p2statechange]
type = TargetState
trigger1 = AnimElem = 27
value = 1108

[State 1105, 2]
type = ChangeState
trigger1 = Animtime = 0
value = 0
ctrl = 1

;-------------------------------------------------------
; Grab & Stab (P2 state)
[Statedef 1107]
type    = A
movetype= H
physics = N
velset = 0,0
sprpriority = 1
anim = 5001

[State 1107, 2]
type = ChangeAnim
trigger1 = time = 28
value = 5010

[State 1107, 2]
type = ChangeAnim2
trigger1 = AnimElem = 26
value = 1108

;-------------------------------------------------------
; Grab & Stab (P2 knockdown)
[Statedef 1108]
type    = A
movetype= I
physics = N
velset = 0,0
sprpriority = 1

[State 1108, 1]
type = VelAdd
trigger1 = Time >= 0
y = .45

[State 1108, 2]
type = VelSet
trigger1 = Time = 0
x = -1
y = -10

[State 1108, 3]
type = ChangeAnim
trigger1 = Time = 0
value = 5050

[State 1108, 4]
type = SelfState
trigger1 = Pos Y >= 0
trigger1 = Vel Y > 0
value = 5100
;--------------------------------------------------------------------------
; Initialize (at the start of the round)
[Statedef 5900]
type = S

[State 5900, 1]
type = VarRangeSet
trigger1 = roundno = 1
value = 0

[State 5900, 2]
type = VarRangeSet
trigger1 = roundno = 1
fvalue = 0

[State 5900, 4]
type = ChangeState
trigger1 = roundno = 1
value = 190
;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;--------------------------------------------------------------------------

;staedef-2 section--------------------------------------------------------------------------------
;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

;This controller plays a sound everytime the player lands from a jump, or
;from a back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0
